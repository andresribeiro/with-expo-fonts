{"version":3,"file":"withInfoPlistExpoFonts.js","sourceRoot":"","sources":["../src/withInfoPlistExpoFonts.ts"],"names":[],"mappings":";;;AAAA,wDAAkE;AAGlE,2BAAiC;AAEjC,SAAS,SAAS,CAAC,GAAa,EAAE,GAAW;IAC3C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;QACrC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACf;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAEM,MAAM,sBAAsB,GAAmC,CACpE,MAAM,EACN,KAAK,EACL,EAAE;IACF,IAAI,CAAC,KAAK,CAAC,IAAI;QAAE,OAAO,MAAM,CAAC;IAC/B,OAAO,IAAA,8BAAa,EAAC,MAAM,EAAE,CAAC,MAAM,EAAE,EAAE;QACtC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAChD,MAAM,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC;SACnC;QAED,MAAM,UAAU,GAAG,IAAA,gBAAW,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE3C,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC9B,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC1D,MAAM,CAAC,UAAU,CAAC,UAAU,GAAG,SAAS,CACtC,MAAM,CAAC,UAAU,CAAC,UAAsB,EACxC,QAAQ,CACT,CAAC;aACH;QACH,CAAC,CAAC,CAAC;QAEH,sBAAsB;QACtB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;YACxC,OAAO,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;SACrC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AA5BW,QAAA,sBAAsB,0BA4BjC","sourcesContent":["import { ConfigPlugin, withInfoPlist } from \"expo/config-plugins\";\nimport { PluginConfigType } from \"./pluginConfigType\";\n\nimport { readdirSync } from \"fs\";\n\nfunction ensureKey(arr: string[], key: string) {\n  if (!arr.find((mode) => mode === key)) {\n    arr.push(key);\n  }\n  return arr;\n}\n\nexport const withInfoPlistExpoFonts: ConfigPlugin<PluginConfigType> = (\n  config,\n  props\n) => {\n  if (!props.path) return config;\n  return withInfoPlist(config, (config) => {\n    if (!Array.isArray(config.modResults.UIAppFonts)) {\n      config.modResults.UIAppFonts = [];\n    }\n\n    const fontsFiles = readdirSync(props.path);\n\n    fontsFiles.forEach((fontFile) => {\n      if (fontFile.endsWith(\".ttf\") || fontFile.endsWith(\".otf\")) {\n        config.modResults.UIAppFonts = ensureKey(\n          config.modResults.UIAppFonts as string[],\n          fontFile\n        );\n      }\n    });\n\n    // Prevent empty array\n    if (!config.modResults.UIAppFonts.length) {\n      delete config.modResults.UIAppFonts;\n    }\n\n    return config;\n  });\n};\n"]}