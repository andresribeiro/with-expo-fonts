{"version":3,"file":"withXcodeProjectExpoFonts.js","sourceRoot":"","sources":["../src/withXcodeProjectExpoFonts.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ConfigPlugin,\n  IOSConfig,\n  withXcodeProject,\n} from \"@expo/config-plugins\";\nimport { readdirSync } from \"fs\";\nimport { join } from \"path\";\nimport { PluginConfigType } from \"./pluginConfigType\";\n// @ts-ignore\nimport pbxFile from \"xcode/lib/pbxFile\";\n\nexport const withXcodeProjectExpoFonts: ConfigPlugin<PluginConfigType> = (\n  config,\n  props\n) => {\n  return withXcodeProject(config, async (config) => {\n    const groupPath = `.${props.path}`;\n    const group = IOSConfig.XcodeUtils.ensureGroupRecursively(\n      config.modResults,\n      groupPath\n    );\n    const project = config.modResults;\n    const opt: any = {};\n\n    // Unlink old assets\n\n    const groupId = Object.keys(project.hash.project.objects[\"PBXGroup\"]).find(\n      (id) => {\n        const _group = project.hash.project.objects[\"PBXGroup\"][id];\n        return _group.name === group.name;\n      }\n    );\n    if (!project.hash.project.objects[\"PBXVariantGroup\"]) {\n      project.hash.project.objects[\"PBXVariantGroup\"] = {};\n    }\n    const variantGroupId = Object.keys(\n      project.hash.project.objects[\"PBXVariantGroup\"]\n    ).find((id) => {\n      const _group = project.hash.project.objects[\"PBXVariantGroup\"][id];\n      return _group.name === group.name;\n    });\n\n    const children = [...(group.children || [])];\n\n    for (const child of children as {\n      comment: string;\n      value: string;\n    }[]) {\n      const file = new pbxFile(join(group.name, child.comment), opt);\n      file.target = opt ? opt.target : undefined;\n\n      project.removeFromPbxBuildFileSection(file); // PBXBuildFile\n      project.removeFromPbxFileReferenceSection(file); // PBXFileReference\n      if (group) {\n        if (groupId) {\n          project.removeFromPbxGroup(file, groupId); //Group other than Resources (i.e. 'splash')\n        } else if (variantGroupId) {\n          project.removeFromPbxVariantGroup(file, variantGroupId); // PBXVariantGroup\n        }\n      }\n      project.removeFromPbxResourcesBuildPhase(file); // PBXResourcesBuildPhase\n    }\n\n    // Link new assets\n\n    await iterateFontsAsync(props, async (fontFile) => {\n      if (\n        !group?.children.some(\n          ({ comment }: { comment: string }) => comment === fontFile\n        )\n      ) {\n        // Only write the file if it doesn't already exist.\n        config.modResults = IOSConfig.XcodeUtils.addResourceFileToGroup({\n          filepath: join(groupPath, fontFile),\n          groupName: groupPath,\n          project: config.modResults,\n          isBuildFile: true,\n          verbose: true,\n        });\n      } else {\n        console.log(\"Skipping duplicate: \", fontFile);\n      }\n    });\n\n    return config;\n  });\n};\n\nasync function iterateFontsAsync(\n  props: PluginConfigType,\n  callback: (fontFile: string, index: number) => Promise<void>\n) {\n  const fontsFiles = readdirSync(props.path);\n\n  for (let index = 0; index < fontsFiles.length; index++) {\n    const fontFile = fontsFiles[index];\n    if (fontFile.endsWith(\".ttf\") || fontFile.endsWith(\".otf\")) {\n      await callback(fontFile, index);\n    }\n  }\n}\n"]}